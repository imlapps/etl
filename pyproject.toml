[tool.poetry]
name = "etl"
version = "0.1.0"
description = "Dagster ETL for Wikipedia data."
authors = ["imlapps"]
readme = "README.md"

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true

[[tool.mypy.overrides]]
module = ["etl","etl_tests"]
ignore_missing_imports = true

[tool.poetry.dependencies]
python = ">=3.10,<3.13"
dagster = "^1.7.9"
pydantic = "^2.7.4"
dagster-webserver = "^1.7.9"
unidecode = "^1.3.8"
langchain = "^0.2.5"
langchain-openai = "^0.1.8"
langchain-community = "^0.2.5"

[tool.dagster]
module_name = "etl" 

[tool.poetry.group.dev.dependencies]
black = "^24.4.2"
mypy = "^1.10.0"
ruff = "^0.4.8"
pytest = "^8.2.2"
isort = "^5.13.2"
tee = "^0.0.3"
pytest-cov = "^5.0.0"
pytest-mock = "^3.14.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
lint.ignore = [
    "ANN101", # missing-type-self
    "ANN102", # missing-type-cls,
    "ANN204", # Missing return type annotation for __init__
    "COM812", # Trailing comma missing
    "D",      # Missing docstrings
    "E501",   # Line too long
    "EM102",  # Exception must not use an f-string literal
    "ERA001", # Commented-out code
    "FA",     # Missing from __future__ import annotations
    "I001",   # Import block is un-sorted or un-formatted
    "ICN001", # Pandas should be imported as pd
    "N815",   # Mixed-case variables
    "PLC0414",# Useless-import-alias 
    "S101",   # Use of assert
    "TRY003", # Avoid specifying long messages outside the exception class
]
lint.select = ["ALL"]
src = ["app"]
target-version = "py310"